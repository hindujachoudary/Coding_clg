#include<bits/stdc++.h>
using namespace std;
int merge(int arr[],int temp[],int low,int high){
	int i=low;
	int mid=(low+high)/2;
	int j=mid;
	int k=low;
	int count=0;
	while(i<=(mid-1) && j<=high){
		if(arr[i]<=arr[j])
			temp[k++]=arr[i++];
		else{
			temp[k++]=arr[j++];
			count+=mid-i;
		}
	}
	while(i<=mid-1)
		temp[k++]=arr[i++];
	while(j<=high)
		temp[k++]=arr[j++];
	for(i=low;i<=high;i++)
		arr[i]=temp[i];
	return count;
}

int inversioncount(int arr[],int temp[],int low,int high){
	if(low>=high)
		return 0;
	int count=0;
	int mid=(low+high)/2;
	count+=inversioncount(arr,temp,low,mid);
	count+=inversioncount(arr,temp,mid+1,high);
	count+=merge(arr,temp,low,high);
	return count;
}


int main(){
	int t,n,i,q,k,p;
	cin>>t;
	while(t--){
		cin>>n>>q;
		int a[n],b[n],temp[n];
		for(i=0;i<n;i++)
			cin>>a[i];
		while(q--){
			cin>>k;
			for(i=0;i<n;i++)
				b[i]=a[i]^k;
			p=inversioncount(b,temp,0,n);
			cout<<p<<endl;
		}
	}
	return 0;
}

